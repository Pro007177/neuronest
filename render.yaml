# Render Blueprint specification: https://render.com/docs/blueprint-spec
# Defines the services needed for the NeuroNest application.

databases:
  # PostgreSQL Database Service (Free Tier)
  - name: neuronest-db         # Unique name for the database instance within Render
    databaseName: neuronest_db # The actual database name created inside PostgreSQL
    user: neuronest_user       # The database user Render will create
    plan: free                 # Use the free tier (sleeps after inactivity, data may not be persistent long-term)
    region: oregon             # Optional: Choose a region (e.g., oregon, frankfurt, singapore)

services:
  # Backend API Service (FastAPI)
  - type: web                  # A service that runs code and listens for HTTP requests
    name: neuronest-api        # Unique name for the backend service
    runtime: python            # Specify the runtime environment
    region: oregon             # Match the database region for lower latency
    rootDir: backend           # Specifies the directory containing the backend code
    plan: free                 # Use the free tier (sleeps after inactivity)
    buildCommand: |            # Commands to build the service (run in order)
      pip install --upgrade pip
      pip install -r requirements.txt
      alembic upgrade head      # Apply database migrations during build/deploy
    startCommand: "uvicorn app.main:app --host 0.0.0.0 --port $PORT" # Command to start the server ($PORT is set by Render)
    healthCheckPath: /api/health # Path Render uses to check if the service is healthy
    envVars:
      - key: PYTHON_VERSION      # Specify Python version (check Render's supported versions)
        value: 3.11
      - key: DATABASE_URL        # Automatically set by Render from the linked database
        fromDatabase:
          name: neuronest-db     # Must match the 'name' of the database service above
          property: connectionString # Use the connection string provided by Render
      - key: ANTHROPIC_API_KEY   # API Key for Claude
        fromSecret: true         # Indicate value comes from Render's secret management
      - key: JWT_SECRET_KEY      # Secret key for signing JWT tokens
        fromSecret: true         # Indicate value comes from Render's secret management
      - key: FRONTEND_ORIGIN     # URL of the deployed frontend for CORS
        fromService:
          type: static           # The type of the service providing the value
          name: neuronest-web    # Must match the 'name' of the frontend service below
          property: url          # Get the public URL of the frontend service
      - key: APP_ENV             # Environment variable to indicate production mode
        value: production

  # Frontend Application Service (React Static Site)
  - type: static               # A service that serves static files (HTML, CSS, JS)
    name: neuronest-web        # Unique name for the frontend service
    region: oregon             # Match other services' region
    rootDir: .                 # The root directory of the repository contains the frontend setup
    plan: free                 # Use the free tier
    buildCommand: |            # Commands to build the static site
      npm install              # Install Node.js dependencies
      npm run build            # Run the React build script
    publishDir: build          # The directory containing the built static files (output of npm run build)
    envVars:
      - key: REACT_APP_API_URL   # Environment variable needed by React *during build*
        fromService:
          type: web              # Get value from a web service
          name: neuronest-api    # Must match the 'name' of the backend service above
          property: url          # Get the public URL of the backend service
    routes:
      # Rewrite rule for single-page applications (like React Router)
      # Serves index.html for any path not matching a static file
      - type: rewrite
        source: /*              # Match all paths
        destination: /index.html # Serve the main entry point